let rplus = @([[{nat,nat}] -> {nat,nat}] -> [{nat,nat}] -> {nat,nat})
  \rbox. let [r] = rbox in
  \sbox. let [s] = sbox in
  let [edge] = [r [s]] in
  path as
  edge or
  (for a in edge for b in path do
  let (x,y) = a in let (y1,z) = b in
  when y = y1 do {(x,z)})
in
let rchar = @([{nat,nat}] -> {nat,nat})
  \sbox. let [s] = sbox in
  for e in s do
  let (i, ignored) = e in
  {(i,i+1)}
in
  rplus;
