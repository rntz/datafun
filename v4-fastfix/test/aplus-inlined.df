let rplus = @([[{nat,nat}] -> {nat,nat}] -> [{nat,nat}] -> {nat,nat})
  \rbox. let [r] = rbox in
  \sbox. let [s] = sbox in
  let [edge] = [r [s]] in
  path as
  edge or
  (for a in edge for b in path do
  let (x,y) = a in let (y1,z) = b in
  when y = y1 do {(x,z)})
in
let [rchar] = [@([nat] -> [{nat,nat}] -> {nat,nat})
  \c0box. let [c0] = c0box in 
  \sbox. let [s] = sbox in
  for e in s do
  let (i, c1) = e in
  {(i,i+1) when c0 = c1}]
in
  rplus [rchar [97]];   # 'a+'
